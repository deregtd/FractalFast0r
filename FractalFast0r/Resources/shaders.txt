struct VS_INPUT 
{
	float3 Position : POSITION0;
	float2 Tex : TEXCOORD0;
};

struct PS_INPUT 
{
	float4 Position : POSITION0;
	float2 Tex : TEXCOORD0;
};

PS_INPUT vs_main( VS_INPUT Input,
        uniform float4x4 matViewProjection )
{
	PS_INPUT Output;

	Output.Position = mul(matViewProjection, float4(Input.Position, 1));
	Output.Tex = Input.Tex;

	return Output;
}



float testinput : register(c7);

float4 ps_main( PS_INPUT Input ) : COLOR0
{
	float2 c = Input.Tex;
	float2 z = float2(0,0);

	int maxiterations = testinput;
	int i = 0;

	int a = 0;
	while (a != 1)
	{
	  for (int b=0; b<128; b++)
	  {
		 float2 zsquared = { z.x*z.x - z.y*z.y, 2 * z.x * z.y };
		 z = zsquared + c;

		 i++;
		 float distsquared = dot(z,z);
		 if (i == maxiterations || distsquared > 4.0)
		 {
			a = 1;
			b = 256;
		 }
	  }
	}

   float4 col;
   if (i == maxiterations)
      col = float4(0,0,0,1);
   else
   {   
      const int modlev = 16;
      i %= 6*modlev;
      const float mid = 0.0;

      float imodo = (i % modlev);

      float imodup = mid + (1.0-mid)*imodo/modlev;
      float imoddown = mid + (1.0-mid)*(modlev-imodo)/modlev;
      
      if (i < modlev)
         col = float4(1, imodup, mid, 1 );
      else if (i < 2*modlev)
         col = float4(imoddown, 1, mid, 1 );
      else if (i < 3*modlev)
         col = float4(mid, 1, imodup, 1 );
      else if (i < 4*modlev)
         col = float4(mid, imoddown, 1, 1 );
      else if (i < 5*modlev)
         col = float4(imodup, mid, 1, 1 );
      else// if (i < 6*modlev)
         col = float4(1, mid, imoddown, 1 );
   }
   
   return col;
}
